"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const e=require("vue"),c=require("./radio.js"),S=require("@tu-view-plus/hooks"),V=require("./use-radio.js");require("../style/radio.css");const g=["aria-checked","aria-disabled","tabindex"],E=["value","name","disabled"],N=e.defineComponent({name:"TuRadio"}),q=e.defineComponent({...N,props:c.radioProps,emits:c.radioEmits,setup(p,{emit:b}){const r=p,{radioRef:v,radioGroup:t,focus:i,radioSize:C,radioType:d,disabled:u,modelValue:n,tabIndex:y,handleChange:f}=V.useRadio(r,b),a=S.useNamespace("radio"),k=e.computed(()=>({[a.b()]:!0,[a.m(C.value)]:!0,[a.m(d.value)]:!!d.value,[a.is("disabled")]:u.value,[a.is("focus")]:i.value,[a.is("bordered")]:r.border,[a.is("checked")]:n.value===r.label})),R=e.computed(()=>({[a.e("input")]:!0,[a.is("checked")]:n.value===r.label})),z=e.computed(()=>({color:(t==null?void 0:t.textColor)||""}));return(s,l)=>{var m;return e.openBlock(),e.createElementBlock("label",{class:e.normalizeClass(e.unref(k)),"aria-checked":e.unref(n)===s.label,"aria-disabled":e.unref(u),tabindex:e.unref(y)},[e.createElementVNode("span",{class:e.normalizeClass(e.unref(R))},[e.withDirectives(e.createElementVNode("input",{ref_key:"radioRef",ref:v,type:"radio","onUpdate:modelValue":l[0]||(l[0]=o=>e.isRef(n)?n.value=o:null),class:e.normalizeClass(e.unref(a).e("original")),value:s.label,name:s.name||((m=e.unref(t))==null?void 0:m.name),disabled:e.unref(u),onFocus:l[1]||(l[1]=o=>i.value=!0),onBlur:l[2]||(l[2]=o=>i.value=!1),onChange:l[3]||(l[3]=(...o)=>e.unref(f)&&e.unref(f)(...o))},null,42,E),[[e.vModelRadio,e.unref(n)]]),e.createElementVNode("span",{class:e.normalizeClass(e.unref(a).e("inner"))},null,2)],2),e.createElementVNode("span",{class:e.normalizeClass(e.unref(a).e("label")),style:e.normalizeStyle(e.unref(n)===s.label?e.unref(z):{}),onKeydown:l[4]||(l[4]=e.withModifiers(()=>{},["stop"]))},[e.renderSlot(s.$slots,"default",{},()=>[e.createTextVNode(e.toDisplayString(s.label),1)])],38)],10,g)}}});exports.default=q;
