import { TextareaProps, TextareaEmits } from './textarea';
import type { ShallowRef, SetupContext } from 'vue';
export default function useTextarea(props: TextareaProps, emit: SetupContext<TextareaEmits>['emit'], textarea: ShallowRef<HTMLTextAreaElement | undefined>): {
    textareaRef: import("vue").ComputedRef<HTMLTextAreaElement | undefined>;
    isHovering: import("vue").Ref<boolean>;
    isFocused: import("vue").Ref<boolean>;
    textareaCalcStyle: ShallowRef<import("vue").StyleValue>;
    textLength: import("vue").ComputedRef<number>;
    nativeTextareaValue: import("vue").ComputedRef<string>;
    focus: () => Promise<void>;
    blur: () => void | undefined;
    select: () => void | undefined;
    clear: () => void;
    handleMouseEnter: (evt: MouseEvent) => void;
    handleMouseLeave: (evt: MouseEvent) => void;
    handleCompositionStart: (evt: CompositionEvent) => void;
    handleCompositionUpdate: (evt: CompositionEvent) => void;
    handleCompositionEnd: (evt: CompositionEvent) => void;
    handleInput: (evt: Event) => Promise<void>;
    handleFocus: (evt: FocusEvent) => void;
    handleBlur: (evt: FocusEvent) => void;
    handleChange: (evt: Event) => void;
    handleKeydown: (evt: KeyboardEvent) => void;
    setNativeTextareaValue: () => void;
    resizeTextarea: () => void;
    onceInitSizeTextarea: () => void;
};
